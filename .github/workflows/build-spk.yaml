on:
  push:
    branches:
      - main
      - develop
      - 'release/**'
      - 'feature/**'
    tags:
      - '*'

jobs:
  build-spk:
    name: Build Github Runner Package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        dsm: ["7.0"]
        arch: ["geminilake"]
        projects: ["./ghr"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Package with local action
        uses: ./
        with:
          dsm: ${{ matrix.dsm }}
          arch: ${{ matrix.arch }}
          projects: ${{ matrix.projects }}
      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
            name: packages
            path: ./bin/*.spk

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-spk
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/*.spk
          asset_name: package-${{ github.ref }}.spk
          asset_content_type: application/octet-stream
